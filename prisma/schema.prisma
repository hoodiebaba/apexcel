generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Vendor {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName       String?
  lastName        String?
  username        String   @unique 
  vendorName      String
  phone           String
  email           String   @unique
  password        String
  address         String
  city            String
  state           String
  pinCode         String
  vendorType      String   // transporter, driver, contractor, supplier
  companyName     String
  accountType     String
  bankAccountNo   String
  bankName        String
  ifsc            String
  accountHolder   String
  upi             String?
  paymentTerms    String
  gstNumber       String?
  gstImage        String?
  aadharCard      String?
  panNumber       String   @unique
  panImage        String?
  cancelCheque    String?
  message         String?
  registeredBy    String   // self / admin
  kycBy           String?  // adminId
  kycStatus       String   @default("pending") // pending, approved, rejected
  active          Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Customer {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  username        String   @unique 
  firstName       String?
  lastName        String?   
  customerName    String
  phone           String
  email           String   @unique
  password        String
  address         String
  city            String
  state           String
  pinCode         String
  customerType    String   // individual, govt, company
  freightTerms    String   // Paid, ToPay, TBB, Transporter
  companyName     String?
  accountType     String?
  bankAccountNo   String?
  bankName        String?
  ifsc            String?
  accountHolder   String?
  upi             String?
  gstNumber       String?
  gstImage        String?
  aadharCard      String?
  panNumber       String?  @unique
  panImage        String?
  cancelCheque    String?
  paymentTerms    String?
  message         String?
  registeredBy    String   // self / admin
  kycBy           String?
  kycStatus       String   @default("pending")
  active          Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Admin {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String?
  firstName   String?
  lastName    String?
  username    String   @unique
  password    String
  email       String   @unique
  phone       String?
  role        String   @default("admin") // "sudo" | "admin" | "editor"
  photo       String?  // profile picture (file URL ya base64)
  bio         String?  // role/bio
  socialUrls  Json?    // { "twitter": "...", "linkedin": "..." }
  address     String?
  country     String?
  city        String?
  state       String?
  pinCode     String?
  taxId       String?  // GST / PAN ya alag bhi ho sakta
  accountHolder String?
  bankName    String?
  accountType String?
  ifsc        String?
  bankAccountNo String?
  upi         String?
  gstNumber   String?
  permissions String[] @default([])
  status      String   @default("active") // ✅ new field
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Load {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  loadNumber  String?  @unique
  createdBy       String   // "sudo" | "admin" | "customer"
  creatorName     String
  creatorPhone    String
  creatorEmail    String
  creatorAddress  String

  loadDate        DateTime @default(now())
  loadTime        String?

  customerPanNumber String  // Customer PAN reference
  vendorPanNumber   String? // Vendor PAN reference

  paymentTerms    String

  originCities      String[]  // multiple cities allowed
  destinationCities String[]  // multiple cities allowed
  vehicleTypes      String[]  // multiple types allowed
  materialTypes     String[]  // text, can be multiple

  /* ✅ Sender & Receiver stored as JSON */
  consignor Json   // { name, address, phone, gstNumber?, panNumber? }
  consignee Json   // { name, address, phone, gstNumber?, panNumber? }

  /* Invoice */
  invoiceNumber       String?
  invoiceDate         DateTime?
  invoiceValue        Float?
  invoiceDescription  String?
  invoicePackages     Int?
  invoiceInstructions String?

  /* LR (Lorry Receipt) */
  lrNumber       String?
  lrDate         DateTime?
  lrValue        Float?
  lrDescription  String?
  lrPackages     Int?
  lrInstructions String?
  
  /*Customer details*/
  customerName      String?
  customerPhone     String?
  customerAddress   String?
  customerOwnerPan  String? // Vehicle owner PAN
  
  /* Vendor details */
  vendorName      String?
  vendorPhone     String?
  vendorAddress   String?
  vendorOwnerPan  String? // Vehicle owner PAN

  loadingDate     DateTime?
  basicFreight    Float?
  fuelCharges     Float?
  loadingCharges  Float?
  unloadingCharges Float?
  detentionLoading Float?
  detentionUnloading Float?
  otherCharges    Float?
  gstRate         Float?
  subTotal        Float?
  gstAmount       Float?
  totalAmount     Float?
  remarks         String?

  /* Location Updates */
  locationUpdates Json?  // [{ by:"customer", text:"Reached X city"}, ...]

  /* Files */
  lorryReceiptFile String? // pdf
  invoiceFile      String? // pdf
  
  status      String   @default("pending") // ✅ new field
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

/* ---------------------------
   Wallet Model
--------------------------- */
model Wallet {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  
  requestById     String   // PAN of requester
  requestByType   String   // "vendor" | "customer" | "admin"
  
  requestToId     String   // PAN of receiver
  requestToType   String   // "vendor" | "customer" | "admin"
  
  amount          Float
  utrNumber       String?
  
  /* Banking Details */
  bankAccountNo   String?
  ifsc            String?
  bankName        String?
  accountHolder   String?
  accountType     String?
  upi             String?
  qrCode          String? // media upload

  /* Response */
  responseById    String? // PAN of responder
  responseType    String?
  
  paymentProof    String? // media upload
  status          String   @default("pending") // pending, success, failed
  remarks         String?

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}


model CallFile {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId

  senderId        String   // Admin.id
  senderUsername  String
  senderRole      String   // "sudo" | "admin"
  receiverId      String   // Admin.id
  receiverUsername String
  receiverRole    String   // "sudo" | "admin"

  fileName        String   // original name
  storedName      String   // unique safe name on disk
  mimeType        String?
  sizeBytes       Int
  remark          String?

  senderPathSend   String   // /uploads/sudo/x/send/... OR /uploads/admin/y/send/...
  receiverPathRecv String   // /uploads/.../receive/...
  remarks           Json?

  status          String   @default("active") // active | deleted
  deletedBy       String?  // who deleted (id:role)
  deletedAt       DateTime?

  viewedAtByReceiver DateTime?

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}